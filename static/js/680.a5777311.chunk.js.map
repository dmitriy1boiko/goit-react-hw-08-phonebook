{"version":3,"file":"static/js/680.a5777311.chunk.js","mappings":"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","sources":["components/section/Section.styled.jsx","components/section/Section.jsx","components/bookcontact/Bookcontact.jsx","components/pages/ContactsPage/ContactsPage.styles.jsx","contacts/Contacts.styled.jsx","contacts/Contacts.jsx","contacts/filter-contacts/FilterContacts.jsx","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionWrap = styled.section`\n  padding-left: 20px;\n  margin-top: 40px;\n`;","import PropTypes from 'prop-types';\nimport { SectionWrap } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionWrap>\n      <h2>{title}</h2>\n      {children}\n    </SectionWrap>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};","import { useDispatch, useSelector } from 'react-redux';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useState } from 'react';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectorContacts } from 'redux/contacts/selectors';\n\nexport default function Bookcontact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectorContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    const isInContacts = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase() ||\n        contact.number === newContact.number\n    );\n    if (isInContacts) {\n      alert(`${newContact.name} or ${newContact.number} has already existed`);\n      setName('');\n      setNumber('');\n      return;\n    }\n\n    dispatch(addContacts(newContact));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Name</h3>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n        <h3>Number</h3>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Add contact</button>\n      </div>\n    </form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 0px;\n  padding-bottom:10px;\n  margin-top: 60px;\n  margin-bottom: 60px;\n  width: 360px;\n  box-shadow: 0px 0px 90px 0px rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  overflow: hidden;\n`;","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  min-width: 60px; \n  height: 30px;\n  color: #75706c;\n  font-size: 10px;\n  font-weight: 800;\n  text-transform: uppercase;\n  background: transparent;\n  border: 1px solid #b3aca7;\n  border-radius: 10px;\n  margin-right: 10px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: #b3aca7;\n    color: #e2dedb;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Contact = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Wrap, Contact } from './Contacts.styled';\n\n// import { useEffect } from 'react';\n// import { getContacts } from 'redux/contacts/operations';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { selectorContacts, selectorFilter } from 'redux/contacts/selectors';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectorContacts);\n  const filterContacts = useSelector(selectorFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = () => {\n    if (filterContacts === '') return contacts;\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filterContacts.toLowerCase()) ||\n        contact.number.includes(filterContacts)\n    );\n  };\n\n  const filteredContacts = handleFilter();\n\n  // useEffect(() => {\n  //   dispatch(getContacts());\n  // }, [dispatch]);\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <li key={contact.id}>\n          <Wrap>\n            <Contact>\n              {contact.name}: {contact.number}\n            </Contact>\n            <Button\n              type=\"button\"\n              onClick={() => dispatch(deleteContacts(contact.id))}\n            >\n              Delete\n            </Button>\n          </Wrap>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contactsSlice';\nimport { selectorFilter } from 'redux/contacts/selectors';\n\nexport const FilterContacts = () => {\n  const filter = useSelector(selectorFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h3>Find contacts by name</h3>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={e => dispatch(filterContact(e))}\n        value={filter}\n      />\n    </div>\n  );\n};\n","import Section from '../../section/Section';\nimport Bookcontact from '../../bookcontact/Bookcontact';\nimport { Container } from './ContactsPage.styles';\nimport { Contacts } from '../../../contacts/Contacts';\nimport { useEffect, useState } from 'react';\nimport { FilterContacts } from '../../../contacts/filter-contacts/FilterContacts';\nimport Loader from '../../Loader/Loader';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/operations';\n\nexport default function ContactsPage() {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChengeInput = filter => {\n    setFilter(filter);\n  };\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n\n  return (\n    <Container>\n      <Loader>\n        <Section>\n          <Bookcontact></Bookcontact>\n        </Section>\n        <Section title=\"Contacts\">\n          <FilterContacts filter={filter} onChangeInput={handleChengeInput} />\n          <Contacts />\n        </Section>\n      </Loader>\n    </Container>\n  );\n}\n"],"names":["SectionWrap","styled","Section","title","children","Bookcontact","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","selectorContacts","handleChange","e","target","value","onSubmit","preventDefault","newContact","find","contact","toLowerCase","alert","addContacts","type","pattern","required","onChange","Container","Button","Wrap","Contact","Contacts","filterContacts","selectorFilter","filteredContacts","filter","includes","map","onClick","deleteContacts","id","FilterContacts","filterContact","ContactsPage","setFilter","useEffect","getContacts","Loader","onChangeInput"],"sourceRoot":""}